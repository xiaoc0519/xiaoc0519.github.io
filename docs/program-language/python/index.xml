<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xiaoc0519</title>
    <link>https://xiaoc0519.github.io/docs/program-language/python/</link>
    <description>Recent content on Xiaoc0519</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Sep 2023 15:01:01 +0800</lastBuildDate><atom:link href="https://xiaoc0519.github.io/docs/program-language/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Loguru</title>
      <link>https://xiaoc0519.github.io/docs/program-language/python/log/loguru/</link>
      <pubDate>Sat, 16 Sep 2023 15:01:01 +0800</pubDate>
      
      <guid>https://xiaoc0519.github.io/docs/program-language/python/log/loguru/</guid>
      <description>LOGURU#pip install loguru 日志等级和打印#from loguru import logger # 日志输出到指定 路径文件, 放在初始化位置 第一个logger前 # logger.add(&amp;#34;filepath&amp;#34;,rotation=&amp;#34;10K&amp;#34;) logger.add(&amp;#34;logtest.log&amp;#34;) # 关闭控制台输出 logger.remove(handler_id=None) logger.debug(&amp;#39;调试消息&amp;#39;) logger.info(&amp;#39;普通消息&amp;#39;) logger.warning(&amp;#39;警告消息&amp;#39;) logger.error(&amp;#39;错误消息&amp;#39;) logger.critical(&amp;#39;严重错误消息&amp;#39;) logger.success(&amp;#39;成功调用&amp;#39;) 2023-09-14 12:50:57.554 | DEBUG | __main__:&amp;lt;module&amp;gt;:5 - This is a debug message 2023-09-14 12:50:57.556 | INFO | __main__:&amp;lt;module&amp;gt;:6 - This is an info message 2023-09-14 12:50:57.557 | WARNING | __main__:&amp;lt;module&amp;gt;:7 - This is a warning message 2023-09-14 12:50:57.557 | ERROR | __main__:&amp;lt;module&amp;gt;:8 - This is an error message 2023-09-14 12:50:57.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://xiaoc0519.github.io/docs/program-language/python/features/</link>
      <pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaoc0519.github.io/docs/program-language/python/features/</guid>
      <description>FEATURES#F-string#f&#39;{expr=}&#39; 的 f-字符串将扩展表示为表达式文本，加一个等于号，再加表达式的求值结果
指定了转换符，表达式的求值结果会先转换再格式化
des = &amp;#39;string&amp;#39; f&amp;#39;this is a {des}&amp;#39; # this is a string f&amp;#39;{des = }&amp;#39; # des = string # &amp;#39;!r&amp;#39; 为调用 repr() name = &amp;#34;Fred&amp;#34; f&amp;#34;He said his name is {name!r}.&amp;#34; # &amp;#34;He said his name is &amp;#39;Fred&amp;#39;.&amp;#34; # &amp;#39;!s&amp;#39; 即对结果调用 str() # &amp;#39;!a&amp;#39; 为调用 ascii() width = 10 precision = 4 value = decimal.Decimal(&amp;#34;12.34567&amp;#34;) f&amp;#34;result: {value:{width}.{precision}}&amp;#34; # nested fields &amp;#39;result: 12.</description>
    </item>
    
  </channel>
</rss>
