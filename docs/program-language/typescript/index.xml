<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xiaoc0519</title>
    <link>https://xiaoc0519.github.io/docs/program-language/typescript/</link>
    <description>Recent content on Xiaoc0519</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 May 2023 12:02:40 +0800</lastBuildDate><atom:link href="https://xiaoc0519.github.io/docs/program-language/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic</title>
      <link>https://xiaoc0519.github.io/docs/program-language/typescript/basic/</link>
      <pubDate>Wed, 24 May 2023 12:02:40 +0800</pubDate>
      
      <guid>https://xiaoc0519.github.io/docs/program-language/typescript/basic/</guid>
      <description>BASIC Variable let lname :type [= value]; // 变量 const cname = value; // 常量 let a = &amp;#39;a&amp;#39;; const b = &amp;#39;b&amp;#39;; // const 常量 赋值后不允许修改 // 指定类型变量 , 指定后只能存指定的类型数据 let c:string = &amp;#39;c&amp;#39;; // 字符串 :number = 4; // 数字 :number; // undefined 可以不赋值 :number = null; // null 空值 :boolean = false; // true / false 布尔值 :any = 1; // 可以储存任何类型 :number | string; // 联合类型， 同时支持多个类型 typeof e; // 查看 变量e 的类型 type tname = type; // 为 type 类型添加一个 tname 的别名 e + &amp;#34;&amp;#34; // 数字转字符串 隐式转换 `this is ${e}` // `${}` 格式化字符串 Array let numarr :type[]= [a, b, v]; // 数组 let numarr :number[] = [1, 2, 3]; let strarr :string[] = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]; strarr[index] // 取值 strarr[0] 枚举 ENUM enum Ename{ v1, v2, v3}; enum Color{ red, blue, green}; let color : Color = Color.</description>
    </item>
    
  </channel>
</rss>
