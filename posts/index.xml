<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Xiaoc0519</title>
    <link>https://xiaoc0519.github.io/posts/</link>
    <description>Recent content in Blog on Xiaoc0519</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 May 2023 15:48:25 +0800</lastBuildDate><atom:link href="https://xiaoc0519.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Taobao</title>
      <link>https://xiaoc0519.github.io/posts/taobao/</link>
      <pubDate>Tue, 30 May 2023 15:48:25 +0800</pubDate>
      
      <guid>https://xiaoc0519.github.io/posts/taobao/</guid>
      <description>website taobao spider
scrapy startproject projectname cd projectname scrapy genspider spidername spiderwebsite pip install -r requirements.txt 创建浏览器#from selenium import webdriver from selenium.webdriver.chrome.service import Service as ChromeService def creat_chrome_driver(*,headless=False): option = webdriver.Options() if headless: options.add_argument(&amp;#39;--headless&amp;#39;) options.add_experimental_option(&amp;#39;excludeSwitches&amp;#39;,[&amp;#39;enable-automation&amp;#39;]) options.add_experimental_option(&amp;#39;useAutomationExtension&amp;#39;,False) browser = webdriver.Chrome(options=options) browser.execute_cdp_cmd( &amp;#39;Page.addScriptToEvaluateOnNewDocument&amp;#39;, {&amp;#39;source&amp;#39;:&amp;#39;Object.defineProperty(navigator,&amp;#34;webdriver&amp;#34;,{get: () =&amp;gt; undefined})&amp;#39;} ) return browser def add_cookies(browser,cookie_file): with open(cookie_file,&amp;#39;r&amp;#39;) as f: cookie_list = json.load(f) for cookie_dict in cookies_list: if cookie_dict[&amp;#39;secure&amp;#39;]: browser.add_cookie(cookie_dict) 从浏览器获取cookie#browser = creat_chrome_driver() browser.</description>
    </item>
    
  </channel>
</rss>
